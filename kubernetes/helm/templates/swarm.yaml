apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: "swarm"
spec:
  configuration:
    clusters:
      - name: "example"
        layout:
          replicas:
          - templates:
              podTemplate: replica
              volumeClaimTemplate: storage
          shardsCount: {{ .Values.swarm.shardsCount }}
        templates:
    zookeeper:
        nodes:
        - host: keeper-keeper
          port: 2181
    files:
      config.d/remote_servers.xml: |
        <clickhouse>
          <allow_experimental_cluster_discovery>1</allow_experimental_cluster_discovery>
          <remote_servers>
            <!-- Swarm cluster built using remote discovery. -->
            <swarm>
              <discovery>
                <path>/clickhouse/discovery/swarm</path>
                <secret>secret_key</secret>
              </discovery>
            </swarm>
          </remote_servers>
        </clickhouse>
  templates:
    podTemplates:
      - name: replica
        spec:
{{ if .Values.swarm.nodeSelector }}
          nodeSelector:
{{ toYaml .Values.swarm.nodeSelector | indent 12 }}
{{ end }}
{{ if .Values.swarm.tolerations }}
          tolerations:
{{ toYaml .Values.swarm.tolerations | indent 12 }}
{{ end }}
{{ if .Values.swarm.affinity }}
          affinity:
            # Specify Pod anti-affinity to Pods with the same label "/app" on the same "hostname"
            podAntiAffinity:
{{ toYaml .Values.swarm.affinity.podAntiAffinity | indent 14 }}
{{ end }}
          containers:
          - name: clickhouse
            image: {{ .Values.swarm.image.repository }}:{{ .Values.swarm.image.tag }}
    volumeClaimTemplates:
      - name: storage
        # Uncomment for prod systems. You will then need to delete PVCs manually.
        # reclaimPolicy: Retain
        spec:
          {{- $storageClass := "" }}
          {{- if .Values.swarm.storage.class }}
          {{- $storageClass = .Values.swarm.storage.class }}
          {{- else }}
          {{- $storageClass = .Values.global.storageClass }}
          {{- end }}
          {{- if $storageClass }}
          storageClassName: {{ $storageClass }}
          {{- end }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.swarm.storage.size }}
